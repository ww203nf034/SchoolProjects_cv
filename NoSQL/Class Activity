# Activity 2

Q1: How many documents in the sample_training.zips collection have fewer than 1000 people listed in the pop field?

use sample_training
db.zips.find({pop:{"$lt":1000}}).count()

ANS : 8065

Q2: What is the difference between the number of people born in 1998 and the number of people born after 1998 in the sample_training.trips collection?

db.trips.find({"birth year":{"$eq":1998} }).count()
db.trips.find({"birth year":{"$gt":1998} }).count()

ANS : 18 - 12 = 6


Q3: Find all listings in sample_Airbnb.listingsAndReviews where property type is House and number of reviews is 0 and accommodates is 4.

use sample_airbnb
db.listingsAndReviews.find({"$and":[{"property_type":"House"},{"number_of_reviews":0},{"accommodates":4}]}).pretty()

Atlas expression: {"$and":[{"property_type":"House"},{"number_of_reviews":0},{"accommodates":4}]}


Q4: Find all listings in sample_Airbnb.listingsAndReviews where beds is greater than 3 and minimum nights is greater than 2.

db.listingsAndReviews.find({"$and":[{beds:{"$gt":3}},{minimum_nights:{"$gt":"2"}}]}).pretty()

Atlas expression: {"$and":[{beds:{"$gt":3}},{minimum_nights:{"$gt":"2"}}]}


Q5: How many businesses in the sample_training.inspections dataset have the inspection result "Out of Business" and belong to the "Home Improvement Contractor - 100" sector?

use sample_training
db.inspections.find({"$and":[{result:"Out of Business"},{sector:"Home Improvement Contractor - 100"}]}).count()

ANS : 4

Q6: Return all documents from the sample_training.inspections collection where the inspection date is either "Feb 20 2015", or "Feb 21 2015" and the company is not part of the "Cigarette Retail Dealer - 127" sector?

db.inspections.find({"$and":[{"$or":[{date:"Feb 20 2015"},{date:"Feb 21 2015"}]},{sector:"Cigarette Retail Dealer - 127"}]}).pretty()

Atlas expression: {"$and":[{"$or":[{date:"Feb 20 2015"},{date:"Feb 21 2015"}]},{sector:"Cigarette Retail Dealer - 127"}]}


Q7: What is the name of the listing in the sample_airbnb.listingsAndReviews dataset that accommodates more than 6 people and has exactly 50 reviews?

use sample_airbnb
db.listingsAndReviews.find({"$and":[{accommodates:{"$gt":6}},{number_of_reviews:50}]},{"name":1,"_id":0})

Atlas expression: {"$and":[{accommodates:{"$gt":6}},{number_of_reviews:50}]}


Q8: From, sample_airbnb.listingsAndReviews, find all documents with exactly 20 amenities which include all the amenities listed in the query array. Display the name of the accommodation and cancellation policy only.

db.listingsAndReviews.find({"amenities":{"$size":20}},{"name":1,"cancellation_policy":1}).pretty()

Atlas expression: {"amenities":{"$size":20}},{"name":1,"cancellation_policy":1}

Q9: Return only the names of companies from the sample_training.companies collection that had exactly 8 funding rounds?

use sample_training 
db.companies.find({"funding_rounds":{"$size":8}})

Atlas expression: {"funding_rounds":{"$size":8}}


Q10: Find the name of the companies where last name of the person is Costolo.

db.companies.find({"relationships.person.last_name":"Costolo"})

Atlas expression: {"relationships.person.last_name":"Costolo"}


Q11: Find the name of the companies where first name of the person is Mark, and title in the first element (position 0 is CEO)

db.companies.find({"relationships.0.person.first_name":"Mark"})

Atlas expression: {"relationships.0.person.first_name":"Mark"}


Q12: Find the name of the companies where first name of the person is Mark, and no longer with the company.

db.companies.find({"relationships.is_past":true},{"relationships":{"$elemMatch":{"person.first_name":"Mark"}}}).pretty()

Atlas expression: {"relationships.is_past":true},{"relationships":{"$elemMatch":{"person.first_name":"Mark"}}}


Q13: Find all the companies that have more employees than the year in which they were founded from sample_training.companies.

db.companies.find({"$expr":{"$gt":["$number_of_employees","$founded_year"]}})

Atlas expression: {"$expr":{"$gt":["$number_of_employees","$founded_year"]}}


Q14: How many companies in the sample_training.companies collection have the same permalink as their twitter_username?

db.companies.find({"$expr":["$permalink","$twitter_username"]}).count()

ANS: 9500


Q15: What are the two uses of $ in NOSQL.

#------------------------------------------------------------------------------------------
# Aggregation 

1. How many customers whose age is less than 40 for each purchaseMethod in sample.supplies.sales?

use sample.supplies
db.sales.aggregate([{"$match":{"customer.age":{"$lt":40}}},{"$group":{"_id":"$purchaseMethod","count":{"$sum":1}}},{"$sort":{"count":1}}])

ANS: Phone: 251 / Online: 626 / In store: 1079

2. How many customers for each user type in sample.training.trips? 

use sample.training
db.trips.aggregate([{"$group":{"_id":"$usertype", "total":{"$sum":1}}}])

ANS: Customer: 1989 / Subscriber: 8011

